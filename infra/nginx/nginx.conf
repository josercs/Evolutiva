## =============================================================
## NGINX CONFIG (comentado) – SPA (Vite) + Proxy API Flask
## =============================================================
## Notas rápidas:
## - Ajustado para Docker Compose (service name: api:5000)
## - Segurança básica (headers, CSP) + cache de assets fingerprintados
## - Upstream simples (sem 'resolve') para evitar erro de shared memory
## - Para alterar CSP adicione domínios nas diretivas *-src correspondentes
## =============================================================

# Número de workers proporcional aos núcleos da máquina
worker_processes  auto;

events {
  worker_connections  1024;          # Máx conexões simultâneas por worker
}

http {
  # ---- Tipos MIME ----
  include       /etc/nginx/mime.types; # Mapeia extensões → Content-Type
  default_type  application/octet-stream; # Fallback para binário

  # ---- Otimizações de I/O ----
  sendfile        on;                 # Envia arquivos via zero-copy
  tcp_nopush      on;                 # Agrupa cabeçalhos antes de enviar (melhor throughput)
  tcp_nodelay     on;                 # Reduz latência em conexões keep-alive
  keepalive_timeout  65s;             # Timeout de conexões persistentes
  server_tokens   off;                # Oculta versão do Nginx

  # ---- Resolução DNS Docker ----
  # Evita cache longo de IPs de containers (caso reiniciem mudando IP)
  resolver 127.0.0.1 127.0.0.11 valid=10s ipv6=off;

  # ---- Compressão Gzip ----
  gzip              on;               # Ativa compressão
  gzip_comp_level   5;                # Equilíbrio CPU x tamanho (1-9)
  gzip_min_length   256;              # Só comprime respostas ≥ 256 bytes
  gzip_proxied      any;              # Também quando veio via proxy
  gzip_types        text/plain text/css application/json application/javascript \
                    text/xml application/xml application/xml+rss image/svg+xml font/woff2;

  # ---- WebSocket / Upgrade ----
  # Map para definir cabeçalho Connection apropriado
  map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
  }

  # ---- Upstream para API Flask (Gunicorn) ----
  upstream api_upstream {             # Nome lógico usado no proxy_pass
    server api:5000 max_fails=3 fail_timeout=30s; # Service do docker-compose
    keepalive 16;                     # Reutiliza conexões p/ menor latência
  }

  # =============================================================
  # SERVIDOR HTTP (porta 80)
  # - Em produção, normalmente terminamos TLS num proxy externo
  # =============================================================
  server {
    listen 80;                        # Porta exposta (mapeada pelo host)

    # Redirecionamento opcional p/ HTTPS (habilite se tiver 443 configurado)
    # if ($host !~* "^(localhost|127\.0\.0\.1)$") { return 301 https://$host$request_uri; }

    # ---- Raiz dos arquivos estáticos (build Vite) ----
    root  /usr/share/nginx/html;      # Volume montado (readonly)
    index index.html;                 # SPA entry point

    # ---- HTTP Security / Hardening Headers ----
    add_header X-Frame-Options SAMEORIGIN always;              # Evita clickjacking
    add_header X-Content-Type-Options nosniff always;          # Bloqueia MIME sniffing
    add_header Referrer-Policy strict-origin-when-cross-origin always; # Privacidade referrer
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always; # Restringe APIs

    # ---- Content Security Policy (CSP) ----
    # Ajuste se precisar de CDNs: adicione domínios em script-src/style-src/font-src/img-src/connect-src.
    # Atenção: Remover restrições facilita XSS; expanda somente o necessário.
    add_header Content-Security-Policy "default-src 'self'; frame-ancestors 'none'; img-src 'self' data: https:; script-src 'self'; style-src 'self' 'unsafe-inline'; connect-src 'self' http: https:; font-src 'self' data: https:; object-src 'none'; base-uri 'self'; form-action 'self'" always;

    # ---- Cache de Conteúdo ----
    # index.html SEM cache p/ permitir deploy instantâneo
    location = /index.html {
      add_header Cache-Control "no-store";
      expires -1;                     # Expira imediatamente
    }
    # Assets fingerprintados: cache agressivo (30 dias, immutable)
    location ~* \.(?:js|css|woff2?|svg|png|jpg|jpeg|gif|webp)$ {
      add_header Cache-Control "public, max-age=2592000, immutable";
      expires 30d;
      access_log off;                 # Reduz ruído nos logs
    }

    # ---- Proxy /api/ → Flask ----
    location /api/ {
      proxy_pass         http://api_upstream;          # Encaminha mantendo URI
      proxy_http_version 1.1;                          # Necessário p/ websockets / keep-alive

      # Cabeçalhos de origem e contexto
      proxy_set_header Host               $host;
      proxy_set_header X-Real-IP          $remote_addr;
      proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto  $scheme;
      proxy_set_header Authorization      $http_authorization; # Preserve Bearer

      # Suporte a WebSocket (se futuramente necessário)
      proxy_set_header Upgrade            $http_upgrade;
      proxy_set_header Connection         $connection_upgrade;

      # Timeouts (evitam travar requisições longas indefinidamente)
      proxy_connect_timeout  15s;
      proxy_send_timeout     120s;
      proxy_read_timeout     120s;

      # Buffers (otimizados p/ respostas médias); ajuste se houver streaming grande
      proxy_buffering        on;
      proxy_buffers          16 16k;
      proxy_busy_buffers_size 32k;
    }

    # ---- SPA Fallback ----
    # React Router: qualquer rota não encontrada → index.html
    location / {
      try_files $uri /index.html;
    }
  }

  # =============================================================
  # BLOCO HTTPS (Opcional) – habilite certificados e HSTS aqui
  # =============================================================
  # server {
  #   listen 443 ssl http2;
  #   ssl_certificate     /etc/nginx/certs/fullchain.pem;
  #   ssl_certificate_key /etc/nginx/certs/privkey.pem;
  #   root  /usr/share/nginx/html;
  #   index index.html;
  #   # HSTS: só ative se HTTPS estiver 100% configurado
  #   add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
  #   # (Repita aqui os mesmos locations/headers do server:80 conforme necessidade)
  # }
}

## =============================================================
## CHECKLIST RÁPIDO
## - Proxy /api/ funcionando? curl http://localhost/api/health
## - SPA fallback servindo? Acessar rota inexistente → retorna index.html
## - CSP bloqueando algo legítimo? Ajustar diretivas específicas (não usar *)
## - Cache: limpar / invalidar ao trocar assets (hash no nome ajuda)
## =============================================================
